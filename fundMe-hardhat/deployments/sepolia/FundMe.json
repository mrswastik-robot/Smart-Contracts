{
  "address": "0x8baE049f94F3950297853aEba0a756246DC5254b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x713388aa231963619f6a1eceec064303263961ab3d6e25cef43a1c86100314db",
  "receipt": {
    "to": null,
    "from": "0x9e7476FdCB8365381bA8Fd1E620bF09c92a87Fcf",
    "contractAddress": "0x8baE049f94F3950297853aEba0a756246DC5254b",
    "transactionIndex": 0,
    "gasUsed": "879072",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xacddcfaa97d8916bab138dfe44e3fdc96f36a014fde51e3e6a84d85ba40e750c",
    "transactionHash": "0x713388aa231963619f6a1eceec064303263961ab3d6e25cef43a1c86100314db",
    "logs": [],
    "blockNumber": 3885773,
    "cumulativeGasUsed": "879072",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "c0b1f05a01043caf1d1bbda5447ddff3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe\\n{\\n    using PriceConverter for uint;\\n\\n    uint public constant MINIMUM_USD = 50*10**18;\\n    address[] public funders;\\n    mapping (address => uint) public addressToAmountFunded;\\n\\n    address public owner;\\n\\n    //now making changes coz we are being fundMe to hardhat\\n    //watch at around 10:25:00\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress)           //jabbhi deploy krte hain contract waise hi sbse pehle constructor call hota hain , to jaise hi sbse pehle jisne deploy kiya usi ko apan owner set kr diye\\n    {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    modifier onlyOwner\\n    {\\n        require(msg.sender == owner,\\\"You are not the owner.\\\");\\n        _;\\n    }\\n\\n    function fund() public payable \\n    {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!!\\\");      //equal to getConversionRate(msg.value) , kyunki library se extract kr rahe na function , to msg.value will already be considered as the first parameter to getConversionRate\\n\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withDrawAll() public onlyOwner// contract me bhej to koi bhi skta lekin withdraw sirf owner kr skta jisne deploy kiya contract , sbse pehle msg.sender ko hi apan owner banane waale hain constructor ki madad se\\n    {\\n        for(uint index=0; index<funders.length; index++)\\n        {\\n            address funderAddress = funders[index];\\n            addressToAmountFunded[funderAddress] = 0;\\n        }\\n        //'funders' array se saare funders uthaaye ek ek kr k , unka address store krte gye 'funderAddress' me aur waha se mapping wali chiz me amount funded by that specific address '0' krte gye\\n\\n        //resetting the array kyunki abto saare funders khatam , sbke paise utha liye apan ne\\n        funders = new address[](0); \\n\\n        //lekin abhi tk actual paise to transfer kiye hi nhi , chaahe to .send ya .transfer() use kr skte the  .... watch at around 4:53:00\\n\\n        (bool callSuccess, ) = payable (owner).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n}\",\"keccak256\":\"0xc8e2319b31368396715f98de56b96e281cbef73321b5a63964817ab2664c6e99\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter\\n{\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint)            //library me har function me internal dena hota\\n    {\\n        //  AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n\\n        //ye upar wala code aur address aggregator k andr jo that wo shi tha sirf sepolia k liye, abhi humne constructor me address pass kiya hain jis bhi chain ka chahiye fundMe k andar aur \\n        //waha se yaha getConversion me bheja phir getPrice me ab yaha se priceFeed ko neeche use kr k uss chain k hisaab se price nikal liya\\n\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(uint ethAmount , AggregatorV3Interface priceFeed) internal view returns(uint)\\n    {\\n        uint ethPrice = getPrice(priceFeed);\\n        uint ethAmountInUSD = (ethPrice * ethAmount) / 1000000000000000000;\\n\\n        return ethAmountInUSD;\\n\\n    }\\n    \\n}\\n\\n\",\"keccak256\":\"0xfe45185c83472866630b8c0184b69595aed4ccbfc346c796a8545f084293a654\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f73380380610f738339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610e1a806101596000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b14610108578063991671e214610133578063b60d42881461014a578063dc0d3dff1461015457610070565b80633e47d6f3146100755780636b69a592146100b2578063741bef1a146100dd575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906107c0565b610191565b6040516100a99190610806565b60405180910390f35b3480156100be57600080fd5b506100c76101a9565b6040516100d49190610806565b60405180910390f35b3480156100e957600080fd5b506100f26101b6565b6040516100ff9190610880565b60405180910390f35b34801561011457600080fd5b5061011d6101dc565b60405161012a91906108aa565b60405180910390f35b34801561013f57600080fd5b50610148610202565b005b61015261046f565b005b34801561016057600080fd5b5061017b600480360381019061017691906108f1565b6105aa565b60405161018891906108aa565b60405180910390f35b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610292576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102899061097b565b60405180910390fd5b60005b60008054905081101561033d5760008082815481106102b7576102b661099b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610335906109f9565b915050610295565b50600067ffffffffffffffff81111561035957610358610a41565b5b6040519080825280602002602001820160405280156103875781602001602082028036833780820191505090505b506000908051906020019061039d9291906106b6565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516103e690610aa1565b60006040518083038185875af1925050503d8060008114610423576040519150601f19603f3d011682016040523d82523d6000602084013e610428565b606091505b505090508061046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390610b02565b60405180910390fd5b50565b6802b5e3af16b18800006104ae600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105e990919063ffffffff16565b10156104ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e690610b6e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105a19190610b8e565b92505081905550565b600081815481106105ba57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105f583610625565b90506000670de0b6b3a7640000858361060e9190610bc2565b6106189190610c33565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106979190610cf1565b5050509150506402540be400816106ae9190610d6c565b915050919050565b82805482825590600052602060002090810192821561072f579160200282015b8281111561072e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106d6565b5b50905061073c9190610740565b5090565b5b80821115610759576000816000905550600101610741565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078d82610762565b9050919050565b61079d81610782565b81146107a857600080fd5b50565b6000813590506107ba81610794565b92915050565b6000602082840312156107d6576107d561075d565b5b60006107e4848285016107ab565b91505092915050565b6000819050919050565b610800816107ed565b82525050565b600060208201905061081b60008301846107f7565b92915050565b6000819050919050565b600061084661084161083c84610762565b610821565b610762565b9050919050565b60006108588261082b565b9050919050565b600061086a8261084d565b9050919050565b61087a8161085f565b82525050565b60006020820190506108956000830184610871565b92915050565b6108a481610782565b82525050565b60006020820190506108bf600083018461089b565b92915050565b6108ce816107ed565b81146108d957600080fd5b50565b6000813590506108eb816108c5565b92915050565b6000602082840312156109075761090661075d565b5b6000610915848285016108dc565b91505092915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e65722e00000000000000000000600082015250565b600061096560168361091e565b91506109708261092f565b602082019050919050565b6000602082019050818103600083015261099481610958565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a04826107ed565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a3657610a356109ca565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a8b600083610a70565b9150610a9682610a7b565b600082019050919050565b6000610aac82610a7e565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610aec600b8361091e565b9150610af782610ab6565b602082019050919050565b60006020820190508181036000830152610b1b81610adf565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448212100000000600082015250565b6000610b58601c8361091e565b9150610b6382610b22565b602082019050919050565b60006020820190508181036000830152610b8781610b4b565b9050919050565b6000610b99826107ed565b9150610ba4836107ed565b9250828201905080821115610bbc57610bbb6109ca565b5b92915050565b6000610bcd826107ed565b9150610bd8836107ed565b9250828202610be6816107ed565b91508282048414831517610bfd57610bfc6109ca565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c3e826107ed565b9150610c49836107ed565b925082610c5957610c58610c04565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8381610c64565b8114610c8e57600080fd5b50565b600081519050610ca081610c7a565b92915050565b6000819050919050565b610cb981610ca6565b8114610cc457600080fd5b50565b600081519050610cd681610cb0565b92915050565b600081519050610ceb816108c5565b92915050565b600080600080600060a08688031215610d0d57610d0c61075d565b5b6000610d1b88828901610c91565b9550506020610d2c88828901610cc7565b9450506040610d3d88828901610cdc565b9350506060610d4e88828901610cdc565b9250506080610d5f88828901610c91565b9150509295509295909350565b6000610d7782610ca6565b9150610d8283610ca6565b9250828202610d9081610ca6565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dc857610dc76109ca565b5b8282058414831517610ddd57610ddc6109ca565b5b509291505056fea26469706673582212208d6b063a3b293c804e78e769425972cf6ef83e06415c6bf96040d2da9282029464736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b14610108578063991671e214610133578063b60d42881461014a578063dc0d3dff1461015457610070565b80633e47d6f3146100755780636b69a592146100b2578063741bef1a146100dd575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906107c0565b610191565b6040516100a99190610806565b60405180910390f35b3480156100be57600080fd5b506100c76101a9565b6040516100d49190610806565b60405180910390f35b3480156100e957600080fd5b506100f26101b6565b6040516100ff9190610880565b60405180910390f35b34801561011457600080fd5b5061011d6101dc565b60405161012a91906108aa565b60405180910390f35b34801561013f57600080fd5b50610148610202565b005b61015261046f565b005b34801561016057600080fd5b5061017b600480360381019061017691906108f1565b6105aa565b60405161018891906108aa565b60405180910390f35b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610292576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102899061097b565b60405180910390fd5b60005b60008054905081101561033d5760008082815481106102b7576102b661099b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610335906109f9565b915050610295565b50600067ffffffffffffffff81111561035957610358610a41565b5b6040519080825280602002602001820160405280156103875781602001602082028036833780820191505090505b506000908051906020019061039d9291906106b6565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516103e690610aa1565b60006040518083038185875af1925050503d8060008114610423576040519150601f19603f3d011682016040523d82523d6000602084013e610428565b606091505b505090508061046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390610b02565b60405180910390fd5b50565b6802b5e3af16b18800006104ae600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105e990919063ffffffff16565b10156104ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e690610b6e565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105a19190610b8e565b92505081905550565b600081815481106105ba57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105f583610625565b90506000670de0b6b3a7640000858361060e9190610bc2565b6106189190610c33565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106979190610cf1565b5050509150506402540be400816106ae9190610d6c565b915050919050565b82805482825590600052602060002090810192821561072f579160200282015b8281111561072e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106d6565b5b50905061073c9190610740565b5090565b5b80821115610759576000816000905550600101610741565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078d82610762565b9050919050565b61079d81610782565b81146107a857600080fd5b50565b6000813590506107ba81610794565b92915050565b6000602082840312156107d6576107d561075d565b5b60006107e4848285016107ab565b91505092915050565b6000819050919050565b610800816107ed565b82525050565b600060208201905061081b60008301846107f7565b92915050565b6000819050919050565b600061084661084161083c84610762565b610821565b610762565b9050919050565b60006108588261082b565b9050919050565b600061086a8261084d565b9050919050565b61087a8161085f565b82525050565b60006020820190506108956000830184610871565b92915050565b6108a481610782565b82525050565b60006020820190506108bf600083018461089b565b92915050565b6108ce816107ed565b81146108d957600080fd5b50565b6000813590506108eb816108c5565b92915050565b6000602082840312156109075761090661075d565b5b6000610915848285016108dc565b91505092915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e65722e00000000000000000000600082015250565b600061096560168361091e565b91506109708261092f565b602082019050919050565b6000602082019050818103600083015261099481610958565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a04826107ed565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a3657610a356109ca565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a8b600083610a70565b9150610a9682610a7b565b600082019050919050565b6000610aac82610a7e565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610aec600b8361091e565b9150610af782610ab6565b602082019050919050565b60006020820190508181036000830152610b1b81610adf565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448212100000000600082015250565b6000610b58601c8361091e565b9150610b6382610b22565b602082019050919050565b60006020820190508181036000830152610b8781610b4b565b9050919050565b6000610b99826107ed565b9150610ba4836107ed565b9250828201905080821115610bbc57610bbb6109ca565b5b92915050565b6000610bcd826107ed565b9150610bd8836107ed565b9250828202610be6816107ed565b91508282048414831517610bfd57610bfc6109ca565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c3e826107ed565b9150610c49836107ed565b925082610c5957610c58610c04565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8381610c64565b8114610c8e57600080fd5b50565b600081519050610ca081610c7a565b92915050565b6000819050919050565b610cb981610ca6565b8114610cc457600080fd5b50565b600081519050610cd681610cb0565b92915050565b600081519050610ceb816108c5565b92915050565b600080600080600060a08688031215610d0d57610d0c61075d565b5b6000610d1b88828901610c91565b9550506020610d2c88828901610cc7565b9450506040610d3d88828901610cdc565b9350506060610d4e88828901610cdc565b9250506080610d5f88828901610c91565b9150509295509295909350565b6000610d7782610ca6565b9150610d8283610ca6565b9250828202610d9081610ca6565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dc857610dc76109ca565b5b8282058414831517610ddd57610ddc6109ca565b5b509291505056fea26469706673582212208d6b063a3b293c804e78e769425972cf6ef83e06415c6bf96040d2da9282029464736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}